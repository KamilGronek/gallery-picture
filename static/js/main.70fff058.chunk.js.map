{"version":3,"sources":["components/autocomplete/AutoComplete.js","components/MainPage.js","components/resultsPageChild/ModalSide.js","components/resultsPageChild/Gallery.js","components/ResultPage.js","App.js","reportWebVitals.js","index.js"],"names":["CustomInputAutocomplete","props","options","resultsArray","map","e","query","Autocomplete","id","onChange","newValue","onClickEnter","handleAutoComplete","onInputChange","newInputValue","handleInputSearch","renderInput","params","ref","InputProps","placeholder","type","inputProps","onKeyDown","AutoCompletePage","useState","setResultsArray","inputName","setInputName","clickEnter","setClickEnter","history","useHistory","useEffect","axios","get","then","response","data","autocomplete","className","href","AutoComplete","keyCode","length","location","pathname","target","value","state","click","push","ModalSide","Modal","size","show","modalIsOpen","onHide","setModalIsOpen","aria-labelledby","closeButton","res","user","name","src","urls","small","alt","Gallery","style","borderStyle","variant","cursor","result","thumb","onClick","getPictureId","ResultPage","message","useParams","useLocation","resultsPhotoArray","setResultsPhotoArray","setId","results","console","log","window","replaceState","paddingBottom","goBack","filter","App","exact","path","render","MainPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70fff058.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nfunction CustomInputAutocomplete(props) {\r\n  let options = props.resultsArray.map((e) => e.query) || [\"\"];\r\n  return (\r\n    <Autocomplete\r\n      id=\"custom-input-demo\"\r\n      onChange={(e, newValue) => {\r\n        props.onClickEnter(e, newValue);\r\n        props.handleAutoComplete(newValue);\r\n      }}\r\n      onInputChange={(e, newInputValue) => {\r\n        props.handleInputSearch(newInputValue);\r\n      }}\r\n      options={options}\r\n      renderInput={(params) => (\r\n        <div ref={params.InputProps.ref}>\r\n          <input\r\n            placeholder=\"Search free high-resolution photos\"\r\n            type=\"text\"\r\n            {...params.inputProps}\r\n            onKeyDown={(e) => {\r\n              props.onClickEnter(e);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CustomInputAutocomplete;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AutoComplete from \"./autocomplete/AutoComplete\";\r\n\r\nfunction AutoCompletePage() {\r\n  const [resultsArray, setResultsArray] = useState([]);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [clickEnter, setClickEnter] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://photocollection1.herokuapp.com/api/nautocomplete/${inputName}`\r\n      )\r\n      .then((response) => {\r\n        setResultsArray(response.data.autocomplete);\r\n      });\r\n  }, [inputName]);\r\n\r\n  const onClickEnter = (e) => {\r\n    if (e.keyCode === 13 && resultsArray.length !== 0) {\r\n      setClickEnter(!clickEnter);\r\n      const location = {\r\n        pathname: `/result/${e.target.value}`,\r\n        state: {\r\n          click: clickEnter,\r\n        },\r\n      };\r\n      history.push(location);\r\n    }\r\n  };\r\n\r\n  const handleAutoComplete = (newValue) => {\r\n    setInputName(newValue);\r\n\r\n    const location = {\r\n      pathname: `/result/${newValue}`,\r\n    };\r\n    history.push(location);\r\n  };\r\n\r\n  const handleInputSearch = (value) => {\r\n    if (value.length > 2) {\r\n      setInputName(value);\r\n    } else {\r\n      setInputName(\"\");\r\n    }\r\n  };\r\n\r\n  const mainText = () => {\r\n    return (\r\n      <div className=\"text\">\r\n        <h1>Unsplash</h1>\r\n        <p>\r\n          \"The internetâ€™s source of\"\r\n          <a href=\"/license\">freely-usable images</a>\r\n        </p>\r\n        <p>Powered by creators everywhere.</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-picture\">\r\n        <div className=\"container-1\">\r\n          {mainText()}\r\n          <div className=\"input-browser\">\r\n            <AutoComplete\r\n              resultsArray={resultsArray}\r\n              setInputName={setInputName}\r\n              onClickEnter={onClickEnter}\r\n              handleInputSearch={handleInputSearch}\r\n              handleAutoComplete={handleAutoComplete}\r\n              inputName={inputName}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AutoCompletePage;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nfunction ModalSide(props) {\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={props.modalIsOpen}\r\n      onHide={() => props.setModalIsOpen(false)}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <div className=\"modal-header\"  closeButton>\r\n        <p>{props.res.user.name}</p>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <img src={props.res.urls.small} alt=\"\" />\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n        <strong>\r\n          {\" \"}\r\n          <p>{props.res.user.location}</p>\r\n        </strong>\r\n        </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalSide;\r\n","import React from \"react\";\r\n\r\nfunction Gallery(props) {\r\n  return (\r\n    <article style={{ borderStyle: \"none\" }} className=\"card\">\r\n      <img\r\n        variant=\"primary\"\r\n        style={{ cursor: \"pointer\" }}\r\n        className=\"card__image\"\r\n        src={props.result.urls.thumb}\r\n        alt=\"\"\r\n        onClick={() => props.getPictureId(props.result.id)}\r\n      />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport AutoComplete from \"./autocomplete/AutoComplete\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport ModalSide from \"./resultsPageChild/ModalSide\";\r\nimport Gallery from \"./resultsPageChild/Gallery\";\r\n\r\nfunction ResultPage() {\r\n  const { message } = useParams(\"\");\r\n  const location = useLocation();\r\n  const click = location.state;\r\n  const [resultsPhotoArray, setResultsPhotoArray] = useState([]);\r\n  const [resultsArray, setResultsArray] = useState([]);\r\n  const [inputName, setInputName] = useState(message);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const [clickEnter, setClickEnter] = useState(click);\r\n  const accessKey = \"9tJMde6Lvj7EwGnMaTcycDeV9-hZ4nrZv17OfGZ1p40\";\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.unsplash.com/search/photos?query=${inputName}&per_page=100=&client_id=${accessKey}`\r\n      )\r\n      .then((response) => {\r\n        setResultsPhotoArray(response.data.results);\r\n        console.log(response);\r\n      });\r\n  }, [clickEnter]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://photocollection1.herokuapp.com/api/nautocomplete/${inputName}`\r\n      )\r\n      .then((response) => {\r\n        setResultsArray(response.data.autocomplete);\r\n      });\r\n  }, [inputName]);\r\n\r\n  const onClickEnter = (e) => {\r\n    if (e.keyCode === 13 && resultsArray.length !== 0) {\r\n      setClickEnter(!clickEnter);\r\n      window.history.replaceState(null, \"\", `/result/${e.target.value}`);\r\n    }\r\n  };\r\n\r\n  const handleInputSearch = (value) => {\r\n    if (value.length > 2) {\r\n      setInputName(value);\r\n    } else {\r\n      setInputName(\"\");\r\n    }\r\n  };\r\n\r\n  const getPictureId = (id) => {\r\n    setId(id);\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const gallery = () => {\r\n    return resultsPhotoArray.map((result) => (\r\n      <Gallery\r\n        key={result.id}\r\n        result={result}\r\n        getPictureId={getPictureId}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const galleryModal = () => {\r\n    let tab = resultsPhotoArray\r\n      .filter((result) => result.id === id)\r\n      .map((res) => (\r\n        <ModalSide\r\n          key={res.id}\r\n          res={res}\r\n          modalIsOpen={modalIsOpen}\r\n          setModalIsOpen={setModalIsOpen}\r\n        />\r\n      ));\r\n    return tab;\r\n  };\r\n\r\n  const handleOnClick = () => history.goBack();\r\n\r\n \r\n  const handleAutoComplete = (newValue) => {\r\n    setClickEnter(!clickEnter);\r\n    window.history.replaceState(null, \"\", `/result/${newValue}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gallery\">\r\n        <div className=\"gallery__input-browser\">\r\n          <AutoComplete\r\n            resultsArray={resultsArray}\r\n            setInputName={setInputName}\r\n            onClickEnter={onClickEnter}\r\n            handleInputSearch={handleInputSearch}\r\n            handleAutoComplete={handleAutoComplete}\r\n            inputName={inputName}\r\n          />\r\n        </div>\r\n        <div className=\"gallery__info\">\r\n          <h1 className=\"textResult\" style={{ paddingBottom: \"20px\" }}>\r\n            {inputName}\r\n          </h1>\r\n          <span style={{ cursor: \"pointer\" }} onClick={handleOnClick}>\r\n            Go back\r\n          </span>\r\n        </div>\r\n        <div className=\"gallery__grid\">{gallery()}</div>\r\n      </div>\r\n      {galleryModal()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultPage;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport MainPage from \"./components/MainPage\";\nimport ResultPage from \"./components/ResultPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path=\"/\" render={() => <MainPage />} />\n        <Route path=\"/result/:message\" render={() => <ResultPage />} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}